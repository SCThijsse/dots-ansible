---
- name: Find nvm script.
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.config/nvm/nvm.sh"
  register: result

- name: Download nvm install script.
  ansible.builtin.get_url:
    dest: "{{ ansible_env.HOME }}/nvm_install.sh"
    url: "https://raw.githubusercontent.com/nvm-sh/nvm/v{{ nvm_version }}/install.sh"
    mode: 0755
  when: not result.stat.exists

- name: Install nvm.
  ansible.builtin.command:
    cmd: "/usr/bin/env sh {{ ansible_env.HOME }}/nvm_install.sh"
    chdir: "{{ ansible_env.HOME }}"
    creates: "{{ ansible_env.HOME }}/.config/nvm/nvm.sh"
  environment:
    XDG_CONFIG_HOME: "{{ ansible_env.HOME }}/.config"

- name: Remove nvm install script.
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/nvm_install.sh"
    state: absent

- name: Install node & npm.
  ansible.builtin.shell:
    cmd: >
      . {{ ansible_env.HOME }}/.config/nvm/nvm.sh &&
      nvm install --default --no-progress --latest-npm {{ node_version }}
    creates: "{{ ansible_env.HOME }}/.config/nvm/versions/node/v{{ node_version }}"

- name: Install npm packages.
  community.general.npm:
    name: "{{ item }}"
    state: present
    global: true
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.config/nvm/versions/node/v{{ node_version }}/bin"
  when: npm_installed_packages | length > 0
  loop: "{{ npm_installed_packages }}"

- name: Uninstall npm packages.
  community.general.npm:
    name: "{{ item }}"
    state: absent
    production: true
    global: true
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/.config/nvm/versions/node/v{{ node_version }}/bin"
  when: npm_uninstalled_packages | length > 0
  loop: "{{ npm_uninstalled_packages }}"
